@model ShiftManagerProject.Models.ScheduleParameters

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<string> DayOfWeek = new List<string>(new string[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" });
}
<link rel="stylesheet" type="text/css" href="~/Content/ScheduleParameters.css" />
@*<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<style>
    .update-nag {
        display: inline-block;
        font-size: 14px;
        text-align: left;
        background-color: #fff;
        height: 40px;
        -webkit-box-shadow: 0 1px 1px 0 rgba(0,0,0,.2);
        box-shadow: 0 1px 1px 0 rgba(0,0,0,.1);
        margin-bottom: 70px;
    }

        .update-nag > .update-split {
            background: #337ab7;
            width: 33px;
            float: left;
            color: #fff !important;
            height: 100%;
            text-align: center;
        }

            .update-nag > .update-split > .glyphicon {
                position: relative;
                top: calc(50% - 9px) !important; 
            }

            .update-nag > .update-split.update-success {
                background: #5cb85c !important;
            }

        .update-nag > .update-text {
            line-height: 19px;
            padding-top: 11px;
            padding-left: 45px;
            padding-right: 20px;
        }

        h2{
            text-align:center;
        }
        
        .note{
            text-align:center;
        }

</style>*@
<h2>Create</h2>
@using (Html.BeginForm("Create", "ScheduleParameters"))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="col-md-12 note">
        <div class="update-nag">
            <div class="update-split update-success"><i class="glyphicon glyphicon-leaf"></i></div>
            <div class="update-text"><p>Only update the specific shift, set the rest as '0'</p></div>
        </div>
    </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.Day, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Day, new SelectList(DayOfWeek.ToList()), "-- Select Day --", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DMorning, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DMorning)
                @Html.ValidationMessageFor(model => model.DMorning, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DAfternoon, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DAfternoon)
                @Html.ValidationMessageFor(model => model.DAfternoon, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DNight, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.DNight)
                @Html.ValidationMessageFor(model => model.DNight, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
